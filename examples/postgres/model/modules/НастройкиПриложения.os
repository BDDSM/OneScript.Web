#Использовать logos

Перем Лог Экспорт;

Перем Версия Экспорт;

Перем ИмяЛогаПриложения;
Перем ПутьКФайлуЖурналаПриложения;

Функция Инициализация() Экспорт

	ИмяЛогаПриложения = "osweb.example.app";
	ПутьКФайлуЖурналаПриложения = "./wwwroot/logs/app.log";

	ВыполнитьНастройкиЛогированияПриложения();
	Лог.Информация("/// - ЗАПУСК ПРИЛОЖЕНИЯ - ///");

	Сообщить("" + "Проверяем, что подключение к бд произошло. 
	|В базе данных " + database.ЗапросКакойТоИнформации().Количество() + " строк.", 
	СтатусСообщения.ОченьВажное);

КонецФункции

Функция ПолучитьУровеньЛогированияПриложения()

	УровниЛогирования = Новый Соответствие;
	УровниЛогирования.Вставить("DEBUG", 		 УровниЛога.Отладка);
	УровниЛогирования.Вставить("INFO", 			 УровниЛога.Информация);
	УровниЛогирования.Вставить("WARNING", 		 УровниЛога.Предупреждение);
	УровниЛогирования.Вставить("ERROR", 		 УровниЛога.Ошибка);
	УровниЛогирования.Вставить("CRITICAL_ERROR", УровниЛога.КритичнаяОшибка);

	пУровеньЛогирования = ПолучитьПеременнуюСреды("LOGGING_LEVEL");

	Если пУровеньЛогирования = Неопределено Тогда
		пУровеньЛогирования = "INFO";
	КонецЕсли;	

	пУровеньЛогирования = УровниЛогирования[пУровеньЛогирования];

	Если пУровеньЛогирования = Неопределено Тогда
		ВызватьИсключение "Не установлен уровень логирования приложения";
	КонецЕсли;

	Возврат пУровеньЛогирования;

КонецФункции

Функция ВыполнитьНастройкиЛогированияПриложения()

	Лог = Логирование.ПолучитьЛог(ИмяЛогаПриложения);

	ФайлЖурнала = Новый ВыводЛогаВФайл;
	ФайлЖурнала.ОткрытьФайл(ПутьКФайлуЖурналаПриложения);
	Лог.ДобавитьСпособВывода(ФайлЖурнала);

	пВыводитьЛогВКонсоль = ПолучитьПеременнуюСреды("LOGGING_CONSOLE");
	Если пВыводитьЛогВКонсоль = Неопределено Тогда
		пВыводитьЛогВКонсоль = Ложь;
	КонецЕсли;

	Если пВыводитьЛогВКонсоль Тогда
		ВыводЛогаВКонсоль = Новый ВыводЛогаВКонсоль;
		Лог.ДобавитьСпособВывода(ВыводЛогаВКонсоль);
	КонецЕсли;	

	пУровеньЛогирования = ПолучитьУровеньЛогированияПриложения();
	Сообщить("Уровень логирования - "+пУровеньЛогирования, СтатусСообщения.Информация);

	Лог.УстановитьУровень(пУровеньЛогирования);

	Лог.УстановитьРаскладку(ЭтотОбъект);

КонецФункции	

Функция Форматировать(Знач Уровень, Знач Сообщение) Экспорт

    Возврат СтрШаблон("%1: %2 - %3", ТекущаяДата(), УровниЛога.НаименованиеУровня(Уровень), Сообщение);

КонецФункции